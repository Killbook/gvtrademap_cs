
//listing of all techniques and passes with embedded asm listings 

technique Transformed
{
    pass Pass1
    {
        vertexshader = 
            asm {
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 9.15.779.0000
            //
            // Parameters:
            //
            //   float2 ViewportSize;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   ViewportSize c0       1
            //
            
                preshader
                rcp c0.x, c0.x
                rcp c0.y, c0.y
            
            // approximately 2 instructions used
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 9.15.779.0000
                vs_1_1
                def c1, -0.5, 2, -1, 0
                def c2, 1, -1, 0, 0
                dcl_position v0
                dcl_texcoord v1
                dcl_color v2
                add r0.xyw, v0.xyzx, c1.x
                mul r0.xyw, r0, c0.xyzx
                mad r0.xyw, c1.y, r0, c1.z
                mad oPos.xyw, r0, c2.xyzz, c2.zzzx
                mov oPos.z, v0.z
                mov oT0.xy, v1
                mov oD0, v2
            
            // approximately 7 instruction slots used
            };

        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 9.15.779.0000
            //
            // Parameters:
            //
            //   sampler2D TextureSampler;
            //
            //
            // Registers:
            //
            //   Name           Reg   Size
            //   -------------- ----- ----
            //   TextureSampler s0       1
            //
            
                ps_1_1
                tex t0
                mul r0, t0, v0
            
            // approximately 2 instruction slots used (1 texture, 1 arithmetic)
            };
    }
}

technique TransformedWithGlobalParams
{
    pass Pass1
    {
        vertexshader = 
            asm {
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 9.15.779.0000
            //
            // Parameters:
            //
            //   float2 ViewportSize;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   ViewportSize c0       1
            //
            
                preshader
                rcp c2.x, c0.x
                rcp c2.y, c0.y
            
            // approximately 2 instructions used
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 9.15.779.0000
            //
            // Parameters:
            //
            //   float2 MapOffset;
            //   float MapScale;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   MapOffset    c0       1
            //   MapScale     c1       1
            //
            
                vs_1_1
                def c3, -0.5, 2, -1, 0
                def c4, 1, -1, 0, 0
                dcl_position v0
                dcl_texcoord v1
                dcl_color v2
                add r0.xyw, v0.xyzx, c0.xyzx
                mul r2.xyw, r0, c1.x
                expp r3.y, r2.w
                mov r1.w, r3.y
                frc r1.xy, r2
                mad r0.xyw, r0, c1.x, -r1
                add r0.xyw, r0, c3.x
                mul r0.xyw, r0, c2.xyzx
                mad r0.xyw, c3.y, r0, c3.z
                mad oPos.xyw, r0, c4.xyzz, c4.zzzx
                mov oPos.z, v0.z
                mov oT0.xy, v1
                mov oD0, v2
            
            // approximately 15 instruction slots used
            };

        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 9.15.779.0000
            //
            // Parameters:
            //
            //   sampler2D TextureSampler;
            //
            //
            // Registers:
            //
            //   Name           Reg   Size
            //   -------------- ----- ----
            //   TextureSampler s0       1
            //
            
                ps_1_1
                tex t0
                mul r0, t0, v0
            
            // approximately 2 instruction slots used (1 texture, 1 arithmetic)
            };
    }
}

technique Sprite
{
    pass Pass1
    {
        vertexshader = 
            asm {
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 9.15.779.0000
            //
            // Parameters:
            //
            //   float2 ViewportSize;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   ViewportSize c0       1
            //
            
                preshader
                rcp c0.x, c0.x
                rcp c0.y, c0.y
            
            // approximately 2 instructions used
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 9.15.779.0000
                vs_1_1
                def c1, 0.159154937, 0.5, 0.25, -0.00138883968
                def c2, 6.28318548, -3.14159274, -2.52398507e-007, 2.47609005e-005
                def c3, 0.0416666418, -0.5, 1, -2
                def c4, 1, -1, 0, 0
                dcl_position v0
                dcl_texcoord v1
                dcl_color v2
                dcl_texcoord1 v3
                dcl_texcoord2 v4
                mad r1.xy, v4.z, c1.x, c1.yzzw
                frc r0.xy, r1
                mad r0.xy, r0, c2.x, c2.y
                mul r0.xy, r0, r0
                mad r1.xy, r0, c2.z, c2.w
                mad r1.xy, r0, r1, c1.w
                mad r1.xy, r0, r1, c3.x
                mad r1.xy, r0, r1, c3.y
                mad r2.xy, r0, r1, c3.z
                mul r0.xyz, r2.xyxw, v3.xxyw
                expp r3.y, v0.x
                mov r1.w, r3.y
                frc r1.xy, v0
                mad r0.xw, v3.y, -r2.y, r0.x
                add r1.xyw, -r1, v0.xyzx
                add r0.y, r0.z, r0.y
                add r1.xyw, r1, v3.zwzz
                mad r0.xyw, r0, v4.xyzx, r1
                add r0.xyw, r0, -c1.y
                mul r0.xyw, r0, c0.xyzx
                mad r0.xyw, -c3.w, r0, -c3.z
                mad oPos.xyw, r0, c4.xyzz, c4.zzzx
                mov oPos.z, v0.z
                mov oT0.xy, v1
                mov oD0, v2
            
            // approximately 29 instruction slots used
            };

        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 9.15.779.0000
            //
            // Parameters:
            //
            //   sampler2D TextureSampler;
            //
            //
            // Registers:
            //
            //   Name           Reg   Size
            //   -------------- ----- ----
            //   TextureSampler s0       1
            //
            
                ps_1_1
                tex t0
                mul r0, t0, v0
            
            // approximately 2 instruction slots used (1 texture, 1 arithmetic)
            };
    }
}

technique SpriteWithGlobalParams
{
    pass Pass1
    {
        vertexshader = 
            asm {
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 9.15.779.0000
            //
            // Parameters:
            //
            //   float2 ViewportSize;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   ViewportSize c0       1
            //
            
                preshader
                rcp c3.x, c0.x
                rcp c3.y, c0.y
            
            // approximately 2 instructions used
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 9.15.779.0000
            //
            // Parameters:
            //
            //   float2 GlobalScale;
            //   float2 MapOffset;
            //   float MapScale;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   MapOffset    c0       1
            //   MapScale     c1       1
            //   GlobalScale  c2       1
            //
            
                vs_1_1
                def c4, 0.159154937, 0.5, 0.25, -0.00138883968
                def c5, 6.28318548, -3.14159274, -2.52398507e-007, 2.47609005e-005
                def c6, 0.0416666418, -0.5, 1, -2
                def c7, 1, -1, 0, 0
                dcl_position v0
                dcl_texcoord v1
                dcl_color v2
                dcl_texcoord1 v3
                dcl_texcoord2 v4
                mad r1.xy, v4.z, c4.x, c4.yzzw
                frc r0.xy, r1
                mad r0.xy, r0, c5.x, c5.y
                mul r0.xy, r0, r0
                mad r1.xy, r0, c5.z, c5.w
                mad r1.xy, r0, r1, c4.w
                mad r1.xy, r0, r1, c6.x
                mad r1.xy, r0, r1, c6.y
                mad r2.xy, r0, r1, c6.z
                add r1.xyw, v0.xyzx, c0.xyzx
                mul r0.xyz, r2.xyxw, v3.xxyw
                mul r3.xyw, r1, c1.x
                mad r0.xw, v3.y, -r2.y, r0.x
                expp r4.y, r3.w
                mov r2.w, r4.y
                frc r2.xy, r3
                add r0.y, r0.z, r0.y
                mad r1.xyw, r1, c1.x, -r2
                mul r0.xyw, r0, v4.xyzx
                add r1.xyw, r1, v3.zwzz
                mad r0.xyw, r0, c2.xyzx, r1
                add r0.xyw, r0, -c4.y
                mul r0.xyw, r0, c3.xyzx
                mad r0.xyw, -c6.w, r0, -c6.z
                mad oPos.xyw, r0, c7.xyzz, c7.zzzx
                mov oPos.z, v0.z
                mov oT0.xy, v1
                mov oD0, v2
            
            // approximately 32 instruction slots used
            };

        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 9.15.779.0000
            //
            // Parameters:
            //
            //   sampler2D TextureSampler;
            //
            //
            // Registers:
            //
            //   Name           Reg   Size
            //   -------------- ----- ----
            //   TextureSampler s0       1
            //
            
                ps_1_1
                tex t0
                mul r0, t0, v0
            
            // approximately 2 instruction slots used (1 texture, 1 arithmetic)
            };
    }
}

